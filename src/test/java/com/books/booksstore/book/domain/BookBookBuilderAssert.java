package com.books.booksstore.book.domain;

/**
 * {@link Book.BookBuilder} specific assertions - Generated by CustomAssertionGenerator.
 *
 * Although this class is not final to allow Soft assertions proxy, if you wish to extend it, 
 * extend {@link AbstractBookBookBuilderAssert} instead.
 */
@javax.annotation.Generated(value="assertj-assertions-generator")
public class BookBookBuilderAssert extends AbstractBookBookBuilderAssert<BookBookBuilderAssert, Book.BookBuilder> {

  /**
   * Creates a new <code>{@link BookBookBuilderAssert}</code> to make assertions on actual Book.BookBuilder.
   * @param actual the Book.BookBuilder we want to make assertions on.
   */
  public BookBookBuilderAssert(Book.BookBuilder actual) {
    super(actual, BookBookBuilderAssert.class);
  }

  /**
   * An entry point for BookBookBuilderAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myBook.BookBuilder)</code> and get specific assertion with code completion.
   * @param actual the Book.BookBuilder we want to make assertions on.
   * @return a new <code>{@link BookBookBuilderAssert}</code>
   */
//  @org.assertj.core.util.CheckReturnValue
  public static BookBookBuilderAssert assertThat(Book.BookBuilder actual) {
    return new BookBookBuilderAssert(actual);
  }
}
